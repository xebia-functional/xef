package com.xebia.functional.openai.apis.com.xebia.functional.openai.models.ext.chat

import com.xebia.functional.openai.models.ChatCompletionMessageToolCall
import com.xebia.functional.openai.models.ChatCompletionRequestAssistantMessageFunctionCall
import kotlinx.serialization.Required
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
sealed interface ChatCompletionRequestMessage {

  /**
   * @param content The contents of the system message.
   * @param role The role of the messages author, in this case `system`.
   */
  @Serializable
  data class ChatCompletionRequestSystemMessage(

    /* The contents of the system message. */
    @SerialName(value = "content") @Required val content: String?,

    /* The role of the messages author, in this case `system`. */
    @SerialName(value = "role") @Required val role: ChatCompletionRequestSystemMessage.Role
  ) : ChatCompletionRequestMessage {

    /**
     * The role of the messages author, in this case `system`.
     *
     * Values: system
     */
    @Serializable
    enum class Role(val value: String) {
      @SerialName(value = "system") system("system")
    }
  }

  /**
   * @param content
   * @param role The role of the messages author, in this case `user`.
   */
  @Serializable
  data class ChatCompletionRequestUserMessage(
    @SerialName(value = "content")
    @Required
    val content:
      com.xebia.functional.openai.models.ext.chat.ChatCompletionRequestUserMessageContent?,

    /* The role of the messages author, in this case `user`. */
    @SerialName(value = "role") @Required val role: ChatCompletionRequestUserMessage.Role
  ) : ChatCompletionRequestMessage {

    /**
     * The role of the messages author, in this case `user`.
     *
     * Values: user
     */
    @Serializable
    enum class Role(val value: String) {
      @SerialName(value = "user") user("user")
    }
  }

  /**
   * @param content The contents of the assistant message.
   * @param role The role of the messages author, in this case `assistant`.
   * @param toolCalls The tool calls generated by the model, such as function calls.
   * @param functionCall
   */
  @Serializable
  data class ChatCompletionRequestAssistantMessage(

    /* The contents of the assistant message.  */
    @SerialName(value = "content") @Required val content: String?,

    /* The role of the messages author, in this case `assistant`. */
    @SerialName(value = "role") @Required val role: ChatCompletionRequestAssistantMessage.Role,

    /* The tool calls generated by the model, such as function calls. */
    @SerialName(value = "tool_calls") val toolCalls: List<ChatCompletionMessageToolCall>? = null,
    @Deprecated(message = "This property is deprecated.")
    @SerialName(value = "function_call")
    val functionCall: ChatCompletionRequestAssistantMessageFunctionCall? = null
  ) {

    /**
     * The role of the messages author, in this case `assistant`.
     *
     * Values: assistant
     */
    @Serializable
    enum class Role(val value: String) {
      @SerialName(value = "assistant") assistant("assistant")
    }
  }

  /**
   * @param role The role of the messages author, in this case `tool`.
   * @param content The contents of the tool message.
   * @param toolCallId Tool call that this message is responding to.
   */
  @Serializable
  data class ChatCompletionRequestToolMessage(

    /* The role of the messages author, in this case `tool`. */
    @SerialName(value = "role") @Required val role: ChatCompletionRequestToolMessage.Role,

    /* The contents of the tool message. */
    @SerialName(value = "content") @Required val content: String?,

    /* Tool call that this message is responding to. */
    @SerialName(value = "tool_call_id") @Required val toolCallId: String
  ) {

    /**
     * The role of the messages author, in this case `tool`.
     *
     * Values: tool
     */
    @Serializable
    enum class Role(val value: String) {
      @SerialName(value = "tool") tool("tool")
    }
  }

  /**
   * @param role The role of the messages author, in this case `function`.
   * @param content The return value from the function call, to return to the model.
   * @param name The name of the function to call.
   */
  @Serializable
  @Deprecated(message = "This schema is deprecated.")
  data class ChatCompletionRequestFunctionMessage(

    /* The role of the messages author, in this case `function`. */
    @SerialName(value = "role") @Required val role: ChatCompletionRequestFunctionMessage.Role,

    /* The return value from the function call, to return to the model. */
    @SerialName(value = "content") @Required val content: kotlin.String?,

    /* The name of the function to call. */
    @SerialName(value = "name") @Required val name: kotlin.String
  ) {

    /**
     * The role of the messages author, in this case `function`.
     *
     * Values: function
     */
    @Serializable
    enum class Role(val value: kotlin.String) {
      @SerialName(value = "function") function("function")
    }
  }
}
