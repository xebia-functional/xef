/**
 * Please note: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
@file:Suppress("ArrayInDataClass", "EnumEntryName", "RemoveRedundantQualifierName", "UnusedImport")

package com.xebia.functional.openai.apis

import com.xebia.functional.openai.infrastructure.*
import com.xebia.functional.openai.models.CreateFineTuningJobRequest
import com.xebia.functional.openai.models.FineTuningJob
import com.xebia.functional.openai.models.ListFineTuningJobEventsResponse
import com.xebia.functional.openai.models.ListPaginatedFineTuningJobsResponse
import io.ktor.client.HttpClient
import io.ktor.client.HttpClientConfig
import io.ktor.client.engine.HttpClientEngine
import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.Json

open class FineTuningApi : ApiClient {

  constructor(
    baseUrl: String = ApiClient.BASE_URL,
    org: String? = null,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
    jsonSerializer: Json = ApiClient.JSON_DEFAULT
  ) : super(
    baseUrl = baseUrl,
    org = org,
    httpClientEngine = httpClientEngine,
    httpClientConfig = httpClientConfig,
    jsonBlock = jsonSerializer
  )

  constructor(
    baseUrl: String,
    org: String?,
    httpClient: HttpClient
  ) : super(baseUrl = baseUrl, org = org, httpClient = httpClient)

  /**
   * Immediately cancel a fine-tune job.
   *
   * @param fineTuningJobId The ID of the fine-tuning job to cancel.
   * @return FineTuningJob
   */
  @Suppress("UNCHECKED_CAST")
  open suspend fun cancelFineTuningJob(
    fineTuningJobId: kotlin.String
  ): HttpResponse<FineTuningJob> {

    val localVariableAuthNames = listOf<String>("ApiKeyAuth")

    val localVariableBody = io.ktor.client.utils.EmptyContent

    val localVariableQuery = mutableMapOf<String, List<String>>()
    val localVariableHeaders = mutableMapOf<String, String>()

    val localVariableConfig =
      RequestConfig<kotlin.Any?>(
        RequestMethod.POST,
        "/fine_tuning/jobs/{fine_tuning_job_id}/cancel"
          .replace("{" + "fine_tuning_job_id" + "}", "$fineTuningJobId"),
        query = localVariableQuery,
        headers = localVariableHeaders,
        requiresAuthentication = true,
      )

    return request(localVariableConfig, localVariableBody, localVariableAuthNames).wrap()
  }

  /**
   * Creates a fine-tuning job which begins the process of creating a new model from a given
   * dataset. Response includes details of the enqueued job including job status and the name of the
   * fine-tuned models once complete. [Learn more about fine-tuning](/docs/guides/fine-tuning)
   *
   * @param createFineTuningJobRequest
   * @return FineTuningJob
   */
  @Suppress("UNCHECKED_CAST")
  open suspend fun createFineTuningJob(
    createFineTuningJobRequest: CreateFineTuningJobRequest
  ): HttpResponse<FineTuningJob> {

    val localVariableAuthNames = listOf<String>("ApiKeyAuth")

    val localVariableBody = createFineTuningJobRequest

    val localVariableQuery = mutableMapOf<String, List<String>>()
    val localVariableHeaders = mutableMapOf<String, String>()

    val localVariableConfig =
      RequestConfig<kotlin.Any?>(
        RequestMethod.POST,
        "/fine_tuning/jobs",
        query = localVariableQuery,
        headers = localVariableHeaders,
        requiresAuthentication = true,
      )

    return jsonRequest(localVariableConfig, localVariableBody, localVariableAuthNames).wrap()
  }

  /**
   * Get status updates for a fine-tuning job.
   *
   * @param fineTuningJobId The ID of the fine-tuning job to get events for.
   * @param after Identifier for the last event from the previous pagination request. (optional)
   * @param limit Number of events to retrieve. (optional, default to 20)
   * @return ListFineTuningJobEventsResponse
   */
  @Suppress("UNCHECKED_CAST")
  open suspend fun listFineTuningEvents(
    fineTuningJobId: kotlin.String,
    after: kotlin.String? = null,
    limit: kotlin.Int? = 20
  ): HttpResponse<ListFineTuningJobEventsResponse> {

    val localVariableAuthNames = listOf<String>("ApiKeyAuth")

    val localVariableBody = io.ktor.client.utils.EmptyContent

    val localVariableQuery = mutableMapOf<String, List<String>>()
    after?.apply { localVariableQuery["after"] = listOf("$after") }
    limit?.apply { localVariableQuery["limit"] = listOf("$limit") }
    val localVariableHeaders = mutableMapOf<String, String>()

    val localVariableConfig =
      RequestConfig<kotlin.Any?>(
        RequestMethod.GET,
        "/fine_tuning/jobs/{fine_tuning_job_id}/events"
          .replace("{" + "fine_tuning_job_id" + "}", "$fineTuningJobId"),
        query = localVariableQuery,
        headers = localVariableHeaders,
        requiresAuthentication = true,
      )

    return request(localVariableConfig, localVariableBody, localVariableAuthNames).wrap()
  }

  /**
   * List your organization&#39;s fine-tuning jobs
   *
   * @param after Identifier for the last job from the previous pagination request. (optional)
   * @param limit Number of fine-tuning jobs to retrieve. (optional, default to 20)
   * @return ListPaginatedFineTuningJobsResponse
   */
  @Suppress("UNCHECKED_CAST")
  open suspend fun listPaginatedFineTuningJobs(
    after: kotlin.String? = null,
    limit: kotlin.Int? = 20
  ): HttpResponse<ListPaginatedFineTuningJobsResponse> {

    val localVariableAuthNames = listOf<String>("ApiKeyAuth")

    val localVariableBody = io.ktor.client.utils.EmptyContent

    val localVariableQuery = mutableMapOf<String, List<String>>()
    after?.apply { localVariableQuery["after"] = listOf("$after") }
    limit?.apply { localVariableQuery["limit"] = listOf("$limit") }
    val localVariableHeaders = mutableMapOf<String, String>()

    val localVariableConfig =
      RequestConfig<kotlin.Any?>(
        RequestMethod.GET,
        "/fine_tuning/jobs",
        query = localVariableQuery,
        headers = localVariableHeaders,
        requiresAuthentication = true,
      )

    return request(localVariableConfig, localVariableBody, localVariableAuthNames).wrap()
  }

  /**
   * Get info about a fine-tuning job. [Learn more about fine-tuning](/docs/guides/fine-tuning)
   *
   * @param fineTuningJobId The ID of the fine-tuning job.
   * @return FineTuningJob
   */
  @Suppress("UNCHECKED_CAST")
  open suspend fun retrieveFineTuningJob(
    fineTuningJobId: kotlin.String
  ): HttpResponse<FineTuningJob> {

    val localVariableAuthNames = listOf<String>("ApiKeyAuth")

    val localVariableBody = io.ktor.client.utils.EmptyContent

    val localVariableQuery = mutableMapOf<String, List<String>>()
    val localVariableHeaders = mutableMapOf<String, String>()

    val localVariableConfig =
      RequestConfig<kotlin.Any?>(
        RequestMethod.GET,
        "/fine_tuning/jobs/{fine_tuning_job_id}"
          .replace("{" + "fine_tuning_job_id" + "}", "$fineTuningJobId"),
        query = localVariableQuery,
        headers = localVariableHeaders,
        requiresAuthentication = true,
      )

    return request(localVariableConfig, localVariableBody, localVariableAuthNames).wrap()
  }
}
