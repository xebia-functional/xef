package com.xebia.functional.openai.models.ext.chat

import com.xebia.functional.openai.models.ChatCompletionMessageToolCall
import com.xebia.functional.openai.models.ChatCompletionRole
import kotlinx.serialization.Required
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * @param content The contents of the assistant message.
 * @param role The role of the messages author, in this case `assistant`.
 * @param toolCalls The tool calls generated by the model, such as function calls.
 */
@Serializable
data class ChatCompletionRequestAssistantMessage(

  /* The contents of the assistant message.  */
  @SerialName(value = "content") @Required val content: String?,

  /* The role of the messages author, in this case `assistant`. */
  @SerialName(value = "role") @Required val role: Role,

  /* The tool calls generated by the model, such as function calls. */
  @SerialName(value = "tool_calls") val toolCalls: List<ChatCompletionMessageToolCall> = emptyList()
) : ChatCompletionRequestMessage {

  constructor(content: String?) : this(content, Role.assistant, emptyList())

  constructor(
    content: String?,
    toolCalls: List<ChatCompletionMessageToolCall>?
  ) : this(content, Role.assistant, toolCalls.orEmpty())

  /**
   * The role of the messages author, in this case `assistant`.
   *
   * Values: assistant
   */
  @Serializable
  enum class Role(val value: String) {
    @SerialName(value = "assistant") assistant("assistant");

    val asRole: ChatCompletionRole = ChatCompletionRole.assistant
  }
}
