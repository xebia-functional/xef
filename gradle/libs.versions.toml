[versions]
arrow = "1.2.0-RC"
arrowGradle = "0.11.0-alpha.1"
kotlin = "1.8.20"
openai = "0.12.0"
kotlinx-json = "1.5.0"
ktor = "2.2.2"
spotless = "6.18.0"
okio = "3.3.0"
kotest = "5.5.4"
kotest-testcontainers = "1.3.4"
kotest-arrow = "1.3.0"
klogging = "4.0.0-beta-22"
uuid = "0.0.18"
postgresql = "42.5.1"
testcontainers = "1.17.6"
hikari = "5.0.1"
dokka = "1.8.10"
logback = "1.4.6"
kotlinx-coroutines = "1.6.4"
scalaMultiversion = "2.0.4"
ciris = "3.1.0"
http4s = "0.23.18"
circe = "0.14.4"
catsEffect = "3.4.8"
log4cats = "2.5.0"
catsRetry = "3.1.0"
memeid4cats = "0.8.0"
doobie = "1.0.0-RC2"
scalaTestContainers = "0.40.10"
munit = "0.7.28"
munitCatsEffect = "1.0.5"
scrapeit = "1.1.5"
jtokkit = "0.4.0"
rssreader = "3.4.4"
lucene = "9.6.0"

[libraries]
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }
arrow-fx-stm = { module = "io.arrow-kt:arrow-fx-stm", version.ref = "arrow" }
arrow-resilience = { module = "io.arrow-kt:arrow-resilience", version.ref = "arrow" }
open-ai = { module = "com.theokanning.openai-gpt3-java:service", version.ref = "openai" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-json" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref="kotlinx-coroutines" }
ktor-client = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-winhttp = { module = "io.ktor:ktor-client-winhttp", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
okio-fakefilesystem = { module = "com.squareup.okio:okio-fakefilesystem", version.ref = "okio" }
okio-nodefilesystem = { module = "com.squareup.okio:okio-nodefilesystem", version.ref = "okio" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-framework = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-testcontainers = { module = "io.kotest.extensions:kotest-extensions-testcontainers", version.ref = "kotest-testcontainers" }
kotest-assertions-arrow = { module = "io.kotest.extensions:kotest-assertions-arrow", version.ref = "kotest-arrow" }
uuid = { module = "app.softwork:kotlinx-uuid-core", version.ref = "uuid" }
klogging = { module = "io.github.oshai:kotlin-logging", version.ref = "klogging"  }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
ciris-core = { module = "is.cir:ciris_3", version.ref = "ciris" }
ciris-refined = { module = "is.cir:ciris-refined_3", version.ref = "ciris" }
ciris-http4s = { module = "is.cir:ciris-http4s_3", version.ref = "ciris" }
http4s-dsl = { module = "org.http4s:http4s-dsl_3", version.ref = "http4s" }
http4s-client = { module = "org.http4s:http4s-client_3", version.ref = "http4s" }
http4s-circe = { module = "org.http4s:http4s-circe_3", version.ref = "http4s" }
http4s-emberClient = { module = "org.http4s:http4s-ember-client_3", version.ref = "http4s" }
doobie-core = { module = "org.tpolecat:doobie-core_3", version.ref = "doobie" }
doobie-postgres = { module = "org.tpolecat:doobie-postgres_3", version.ref = "doobie" }
doobie-hikari = { module = "org.tpolecat:doobie-hikari_3", version.ref = "doobie" }
doobie-munit = { module = "org.tpolecat:doobie-munit_3", version.ref = "doobie" }
circe = { module = "io.circe:circe-generic_3", version.ref = "circe" }
cats-effect = { module = "org.typelevel:cats-effect_3", version.ref = "catsEffect" }
logger = { module = "org.typelevel:log4cats-slf4j_3", version.ref = "log4cats" }
openai = { module = "com.theokanning.openai-gpt3-java:service", version.ref = "openai" }
cats-retry = { module = "com.github.cb372:cats-retry_3", version.ref = "catsRetry" }
memeid = { module = "com.47deg:memeid4s-cats_3", version.ref = "memeid4cats" }
munit-core = { module = "org.scalameta:munit_3", version.ref = "munit" }
munit-cats-effect = { module = "org.typelevel:munit-cats-effect-3_3", version.ref = "munitCatsEffect" }
scala-testcontainers-munit = { module = "com.dimafeng:testcontainers-scala-munit_3", version.ref = "scalaTestContainers" }
scala-testcontainers-postgresql = { module = "com.dimafeng:testcontainers-scala-postgresql_3", version.ref = "scalaTestContainers" }
scrape-it = { module = "it.skrape:skrapeit", version.ref = "scrapeit" }
scrape-it-browser-fetcher = { module = "it.skrape:skrapeit-browser-fetcher", version.ref = "scrapeit" }
scrape-it-async-fetcher = { module = "it.skrape:skrapeit-asyn-fetcher", version.ref = "scrapeit" }
jtokk-it = { module = "com.knuddels:jtokkit", version.ref = "jtokkit" }
rss-reader = { module = "com.apptasticsoftware:rssreader", version.ref = "rssreader" }
apache-lucene = { module = "org.apache.lucene:lucene-core", version.ref = "lucene" }

[bundles]
arrow = [
    "arrow-core",
    "arrow-fx-coroutines",
    "arrow-resilience"
]
ktor-client = [
    "ktor-client",
    "ktor-client-content-negotiation",
    "ktor-client-serialization"
]

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-js = { id = "org.jetbrains.kotlin.js", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
arrow-gradle-nexus = { id = "io.arrow-kt.arrow-gradle-config-nexus", version.ref = "arrowGradle" }
arrow-gradle-publish = { id = "io.arrow-kt.arrow-gradle-config-publish", version.ref = "arrowGradle" }
scala-multiversion  = { id = "com.adtran.scala-multiversion-plugin", version.ref = "scalaMultiversion" }
