package com.xebia.functional.xef.reasoning.code.vulnerabilities

import com.xebia.functional.xef.auto.CoreAIScope
import com.xebia.functional.xef.llm.ChatWithFunctions
import com.xebia.functional.xef.prompt.experts.ExpertSystem
import com.xebia.functional.xef.reasoning.internals.callModel
import com.xebia.functional.xef.reasoning.tools.Tool
import com.xebia.functional.xef.reasoning.tools.ToolMetadata
import com.xebia.functional.xef.reasoning.tools.ToolOutput
import io.github.oshai.kotlinlogging.KotlinLogging

class VulnerabilityScanning(
  private val model: ChatWithFunctions,
  private val scope: CoreAIScope,
  private val instructions: List<String> = emptyList()
) : Tool<VulnerabilityScanningResult> {

  private val logger = KotlinLogging.logger {}

  override val functions:
    Map<ToolMetadata, suspend (input: String) -> Tool.Out<VulnerabilityScanningResult>> =
    mapOf(
      ToolMetadata(
        name = "scanForVulnerabilities",
        description = "Scan code for vulnerabilities"
      ) to ::scanForVulnerabilities
    )

  override suspend fun handle(input: ToolOutput<Any?>): Tool.Out<VulnerabilityScanningResult> =
    scanForVulnerabilities(input.toOutputString())

  suspend fun scanForVulnerabilities(code: String): VulnerabilityScanningResult {
    logger.info { "üîç Scanning code for vulnerabilities" }
    return callModel<VulnerabilityScanningResult>(
        model,
        scope,
        prompt =
          ExpertSystem(
            system =
              "You are an expert in vulnerability scanning that can analyze code and identify potential vulnerabilities",
            query =
              """|
                |Given the following code:
                |```code
                |${code}
                |```
            """
                .trimMargin(),
            instructions =
              listOf(
                "Scan the given `code` for vulnerabilities",
                "Your `RESPONSE` MUST be a list of `Vulnerability` objects, where each object has the `name`, `description`, and `examples` of the detected vulnerability"
              ) + instructions
          )
      )
      
  }
}
