package com.xebia.functional.xef.reasoning.code.vulnerabilities

import com.xebia.functional.xef.reasoning.internals.callModel
import com.xebia.functional.xef.auto.CoreAIScope
import com.xebia.functional.xef.llm.ChatWithFunctions
import com.xebia.functional.xef.prompt.experts.ExpertSystem
import io.github.oshai.kotlinlogging.KotlinLogging

class VulnerabilityScanning(
  private val model: ChatWithFunctions,
  private val scope: CoreAIScope
) {

  private val logger = KotlinLogging.logger {}

  suspend fun scanForVulnerabilities(code: String): VulnerabilityScanningResult {
    logger.info { "üîç Scanning code for vulnerabilities" }
    return callModel<VulnerabilityScanningResult>(
      model,
      scope,
      prompt = ExpertSystem(
        system = "You are an expert in vulnerability scanning that can analyze code and identify potential vulnerabilities",
        query = """|
                |Given the following code:
                |```code
                |${code}
                |```
            """.trimMargin(),
        instructions = listOf(
          "Scan the given `code` for vulnerabilities",
          "Your `RESPONSE` MUST be a list of `Vulnerability` objects, where each object has the `name`, `description`, and `examples` of the detected vulnerability"
        )
      )
    ).also {
      logger.info { "üîç Vulnerability scanning result: $it" }
    }
  }
}
